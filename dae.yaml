!obj:pylearn2.train.Train {
    dataset: &train !obj:lines_dataset.Lines {
        switch_images_by_labels : true,
        shape : 20,
        nb : 1000
    },
    model: !obj:pylearn2.models.mlp.MLP {
        layers : [
                 !obj:pylearn2.models.mlp.Tanh  {
                     layer_name: 'h0',
                     dim: 10,
                     irange : 0.01,
                 }, 
                 !obj:pylearn2.models.mlp.Tanh {
                     layer_name: 'h1',
                     dim: 10,
                     irange : 0.01,
                 }, 

                 !obj:pylearn2.models.mlp.Tanh {
                     layer_name: 'out',
                     dim: 400,
                     irange : 0.01
                 }
        ],
        nvis: 2
    },
    algorithm : !obj:pylearn2.training_algorithms.sgd.SGD {
        learning_rate : 1e-5,
        learning_rule : !obj:pylearn2.training_algorithms.learning_rule.AdaDelta {},
        batch_size : 10,
        monitoring_batches : 10,
        monitoring_dataset : *train,
        cost : !obj:pylearn2.costs.cost.SumOfCosts {
            costs: [
                !obj:pylearn2.costs.mlp.Default {},
            ]
        },
        termination_criterion : !obj:pylearn2.termination_criteria.And {
            criteria: [
                !obj:pylearn2.termination_criteria.EpochCounter {
                    max_epochs: 1000,
                },
                !obj:pylearn2.termination_criteria.MonitorBased {
                    channel_name: "objective",
                    prop_decrease: 0.0001,
                    N: 10
                }
            ]
        }
    },
    save_path: "mlp.pkl",
    save_freq: 1
}
